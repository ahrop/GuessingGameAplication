/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ropandi;

import com.ropandi.model.Category;
import com.ropandi.model.WordModel;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import org.osgi.service.jpa.EntityManagerFactoryBuilder;



/**
 *
 * @author user
 */
 
public class JFrameTebakKata extends javax.swing.JFrame {
   WordModel kata;
   List <WordModel> bankSoal;
    EntityManagerFactory  emf = Persistence.createEntityManagerFactory("GuessingGameApplicationV2PU");
    JComboBox cb;
      
//   ModelWord soal1 = new ModelWord("Pondok indah", " tempat dijakarta");
//   ModelWord soal2 = new ModelWord("Sudirman", "Jalan dijakarta");
//   ModelWord soal3 = new ModelWord("Tamrin", "Rumah Sakit");
//   ModelWord soal4 = new ModelWord("Monas", "Monumen nasional");
//   ModelWord []banksoal = { soal1,soal2,soal3,soal4};
    /**
     * Creates new form JFrameTebakKata
     */
    public JFrameTebakKata() throws IOException {
        initComponents();
        showcategory();
        cekButton.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        soalTextField = new javax.swing.JTextField();
        startButton = new javax.swing.JButton();
        jawabanTextField = new javax.swing.JTextField();
        cekButton = new javax.swing.JButton();
        hasilLabel = new javax.swing.JLabel();
        hintButton = new javax.swing.JButton();
        hintLabel = new javax.swing.JLabel();
        categoryComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        soalTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        soalTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                soalTextFieldActionPerformed(evt);
            }
        });

        startButton.setText("Mulai");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        jawabanTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        cekButton.setText("cek");
        cekButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cekButtonActionPerformed(evt);
            }
        });

        hasilLabel.setText("hasil");

        hintButton.setText("clue?");
        hintButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hintButtonActionPerformed(evt);
            }
        });

        hintLabel.setText("hint");

        categoryComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(hintLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(50, 50, 50))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(categoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addComponent(hintButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(soalTextField)
                            .addComponent(jawabanTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(hasilLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(cekButton, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startButton)
                    .addComponent(hintButton)
                    .addComponent(categoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(soalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(hintLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jawabanTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cekButton)
                .addGap(18, 18, 18)
                .addComponent(hasilLabel)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private long getCategoryId() {
    
    long categoryID = 0L;
    String categoryName = (String) cb.getSelectedItem();
    EntityManager em = emf.createEntityManager();
    Query query = em.createQuery("Select c from Category c where c.categoryName = :categoryName");
    query.setParameter("categoryName", categoryName);
    Category category = (Category) query.getSingleResult();
    categoryID = category.getId();
    return categoryID;
    
}
private void showcategory() {
    DefaultComboBoxModel model = (DefaultComboBoxModel) categoryComboBox.getModel();
    EntityManager em = emf.createEntityManager();
    List<Category> category =  em.createQuery("Select c from Category c").getResultList();
    for (Category cat : category) {
        model.addElement(cat.getCategoryName());
        
    }
}
private String acakHuruf() {
           String kata = this.kata.getKataDasar().toUpperCase();
           String [] arrayOfKata = kata.split("");
           List <String> hurufHuruf = Arrays.asList(arrayOfKata);
           Collections.shuffle(hurufHuruf);
           StringBuilder sb = new StringBuilder();
           for (String huruf : hurufHuruf) {
               if(!(huruf.equals(" "))) 
               sb.append(huruf);
        }
           
           String soal = sb.toString();
          return soal;
}
    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        EntityManager em = emf.createEntityManager();
        
        Category cat = em.find(Category.class,getCategoryId());
        
        List<WordModel> bankSoal = cat.getWordModels();
        int indexSoal = (int) Math.floor(Math.random()*bankSoal.size());
        kata = bankSoal.get(indexSoal);
        soalTextField.setText(acakHuruf()); 
        cekButton.setEnabled(true);
       // TODO add your handling code here:
    }//GEN-LAST:event_startButtonActionPerformed

    private void cekButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cekButtonActionPerformed
        String jawaban = jawabanTextField.getText();
        if (jawaban.equalsIgnoreCase(this.kata.getKataDasar())) {
        hasilLabel.setText("Jawaban anda benar"); }
        else {
            hasilLabel.setText("Jawaban anda salah coba lagi");
        }
// TODO add your handling code here:
    }//GEN-LAST:event_cekButtonActionPerformed

    private void hintButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hintButtonActionPerformed
        hintLabel.setText(kata.getHint());// TODO add your handling code here:
    }//GEN-LAST:event_hintButtonActionPerformed

    private void categoryComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryComboBoxActionPerformed
        cb = (JComboBox) evt.getSource();
        
        getCategoryId();// TODO add your handling code here:
    }//GEN-LAST:event_categoryComboBoxActionPerformed

    private void soalTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_soalTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_soalTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameTebakKata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameTebakKata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameTebakKata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameTebakKata.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JFrameTebakKata().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(JFrameTebakKata.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> categoryComboBox;
    private javax.swing.JButton cekButton;
    private javax.swing.JLabel hasilLabel;
    private javax.swing.JButton hintButton;
    private javax.swing.JLabel hintLabel;
    private javax.swing.JTextField jawabanTextField;
    private javax.swing.JTextField soalTextField;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables
}
